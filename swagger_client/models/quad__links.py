# coding: utf-8

"""
    Planet API

    Top level description of the API  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class QuadLinks(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        '_self': 'str',
        'download': 'str',
        'items': 'str',
        'thumbnail': 'str'
    }

    attribute_map = {
        '_self': '_self',
        'download': 'download',
        'items': 'items',
        'thumbnail': 'thumbnail'
    }

    def __init__(self, _self=None, download=None, items=None, thumbnail=None):  # noqa: E501
        """QuadLinks - a model defined in Swagger"""  # noqa: E501

        self.__self = None
        self._download = None
        self._items = None
        self._thumbnail = None
        self.discriminator = None

        if _self is not None:
            self._self = _self
        if download is not None:
            self.download = download
        if items is not None:
            self.items = items
        if thumbnail is not None:
            self.thumbnail = thumbnail

    @property
    def _self(self):
        """Gets the _self of this QuadLinks.  # noqa: E501

        RFC 3986 URI representing the canonical location of this object.  # noqa: E501

        :return: The _self of this QuadLinks.  # noqa: E501
        :rtype: str
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this QuadLinks.

        RFC 3986 URI representing the canonical location of this object.  # noqa: E501

        :param _self: The _self of this QuadLinks.  # noqa: E501
        :type: str
        """

        self.__self = _self

    @property
    def download(self):
        """Gets the download of this QuadLinks.  # noqa: E501

        RFC 3986 URI representing the canonical quad download location.  # noqa: E501

        :return: The download of this QuadLinks.  # noqa: E501
        :rtype: str
        """
        return self._download

    @download.setter
    def download(self, download):
        """Sets the download of this QuadLinks.

        RFC 3986 URI representing the canonical quad download location.  # noqa: E501

        :param download: The download of this QuadLinks.  # noqa: E501
        :type: str
        """

        self._download = download

    @property
    def items(self):
        """Gets the items of this QuadLinks.  # noqa: E501

        RFC 3986 URI representing the canonical location of the items make up the quad.  # noqa: E501

        :return: The items of this QuadLinks.  # noqa: E501
        :rtype: str
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this QuadLinks.

        RFC 3986 URI representing the canonical location of the items make up the quad.  # noqa: E501

        :param items: The items of this QuadLinks.  # noqa: E501
        :type: str
        """

        self._items = items

    @property
    def thumbnail(self):
        """Gets the thumbnail of this QuadLinks.  # noqa: E501

        RFC 3986 URI representing the canonical location of the item thumbnail image.  # noqa: E501

        :return: The thumbnail of this QuadLinks.  # noqa: E501
        :rtype: str
        """
        return self._thumbnail

    @thumbnail.setter
    def thumbnail(self, thumbnail):
        """Sets the thumbnail of this QuadLinks.

        RFC 3986 URI representing the canonical location of the item thumbnail image.  # noqa: E501

        :param thumbnail: The thumbnail of this QuadLinks.  # noqa: E501
        :type: str
        """

        self._thumbnail = thumbnail

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, QuadLinks):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
